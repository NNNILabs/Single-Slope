.program output
.side_set 1

start:
    out X, 32     side 0
loop:
    jmp X--, loop side 1
    jmp start     side 0

% c-sdk {

void output_program_init(PIO pio, uint sm, uint offset, uint pin, float div) {

    pio_sm_config c = output_program_get_default_config(offset);

    pio_gpio_init(pio, pin);

    pio_sm_set_consecutive_pindirs(pio, sm, pin, 1, true);

    pio_sm_set_sideset_pins(pio, sm, pin);

    sm_config_set_out_shift(&c, true, true, 32);

    sm_config_set_clkdiv(&c, div);

    pio_sm_init(pio, sm, offset, &c);
}

%}

.program input

.wrap_target
start:
    mov X, !NULL
    wait 1 pin 1
loop:
    jmp X--, test
    jmp finish
test:
    jmp pin, loop
finish:
    in X, 32
.wrap

% c-sdk {

void input_program_init(PIO pio, uint sm, uint offset, uint pin, float div) {

    pio_sm_config c = output_program_get_default_config(offset);

    pio_gpio_init(pio, pin);

    pio_sm_set_consecutive_pindirs(pio, sm, pin, 1, false);

    sm_config_set_jmp_pin(&c, pin);

    sm_config_set_clkdiv(&c, div);

    sm_config_set_in_shift(&c, true, true, 32);

    pio_sm_init(pio, sm, offset, &c);
}

%}